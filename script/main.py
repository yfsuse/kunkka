#! /usr/bin/env python
#coding:utf-8

import unittest
import HTMLTestRunner
from case import *
from runner import *
from setting import *


class GroupTest(unittest.TestCase):
    def setUp(self):
        pass

    def tearDown(self):
        pass

    def group_aff_id(self):
        e = check_none(GROUP_AFF_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manager(self):
        e = check_none(GROUP_AFF_MANAGER)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_id(self):
        e = check_none(GROUP_ADV_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_id(self):
        e = check_none(GROUP_OFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_year(self):
        e = check_none(GROUP_YEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_month(self):
        e = check_none(GROUP_MONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_week(self):
        e = check_none(GROUP_WEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_day(self):
        e = check_none(GROUP_DAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_hour(self):
        e = check_none(GROUP_HOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manager(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGER)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_id(self):
        e = check_none(GROUP_AFF_IDADV_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_id(self):
        e = check_none(GROUP_AFF_IDOFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyear(self):
        e = check_none(GROUP_AFF_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonth(self):
        e = check_none(GROUP_AFF_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idweek(self):
        e = check_none(GROUP_AFF_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idday(self):
        e = check_none(GROUP_AFF_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idhour(self):
        e = check_none(GROUP_AFF_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_id(self):
        e = check_none(GROUP_AFF_MANAGERADV_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_id(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryear(self):
        e = check_none(GROUP_AFF_MANAGERYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonth(self):
        e = check_none(GROUP_AFF_MANAGERMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerweek(self):
        e = check_none(GROUP_AFF_MANAGERWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerday(self):
        e = check_none(GROUP_AFF_MANAGERDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerhour(self):
        e = check_none(GROUP_AFF_MANAGERHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_id(self):
        e = check_none(GROUP_ADV_IDOFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyear(self):
        e = check_none(GROUP_ADV_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonth(self):
        e = check_none(GROUP_ADV_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idweek(self):
        e = check_none(GROUP_ADV_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idday(self):
        e = check_none(GROUP_ADV_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idhour(self):
        e = check_none(GROUP_ADV_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyear(self):
        e = check_none(GROUP_OFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonth(self):
        e = check_none(GROUP_OFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idweek(self):
        e = check_none(GROUP_OFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idday(self):
        e = check_none(GROUP_OFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idhour(self):
        e = check_none(GROUP_OFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonth(self):
        e = check_none(GROUP_YEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearweek(self):
        e = check_none(GROUP_YEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearday(self):
        e = check_none(GROUP_YEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearhour(self):
        e = check_none(GROUP_YEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthweek(self):
        e = check_none(GROUP_MONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthday(self):
        e = check_none(GROUP_MONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthhour(self):
        e = check_none(GROUP_MONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_weekday(self):
        e = check_none(GROUP_WEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_weekhour(self):
        e = check_none(GROUP_WEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_dayhour(self):
        e = check_none(GROUP_DAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_id(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_id(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryear(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_id(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyear(self):
        e = check_none(GROUP_AFF_IDADV_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonth(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idweek(self):
        e = check_none(GROUP_AFF_IDADV_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idday(self):
        e = check_none(GROUP_AFF_IDADV_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idhour(self):
        e = check_none(GROUP_AFF_IDADV_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyear(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonth(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idweek(self):
        e = check_none(GROUP_AFF_IDOFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonth(self):
        e = check_none(GROUP_AFF_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearweek(self):
        e = check_none(GROUP_AFF_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearday(self):
        e = check_none(GROUP_AFF_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearhour(self):
        e = check_none(GROUP_AFF_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthweek(self):
        e = check_none(GROUP_AFF_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthday(self):
        e = check_none(GROUP_AFF_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthhour(self):
        e = check_none(GROUP_AFF_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idweekday(self):
        e = check_none(GROUP_AFF_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idweekhour(self):
        e = check_none(GROUP_AFF_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_iddayhour(self):
        e = check_none(GROUP_AFF_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_id(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyear(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonth(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyear(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonth(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idweek(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonth(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearweek(self):
        e = check_none(GROUP_AFF_MANAGERYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearday(self):
        e = check_none(GROUP_AFF_MANAGERYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthweek(self):
        e = check_none(GROUP_AFF_MANAGERMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthday(self):
        e = check_none(GROUP_AFF_MANAGERMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthhour(self):
        e = check_none(GROUP_AFF_MANAGERMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerweekday(self):
        e = check_none(GROUP_AFF_MANAGERWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerweekhour(self):
        e = check_none(GROUP_AFF_MANAGERWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerdayhour(self):
        e = check_none(GROUP_AFF_MANAGERDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyear(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonth(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idweek(self):
        e = check_none(GROUP_ADV_IDOFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonth(self):
        e = check_none(GROUP_ADV_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearweek(self):
        e = check_none(GROUP_ADV_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearday(self):
        e = check_none(GROUP_ADV_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearhour(self):
        e = check_none(GROUP_ADV_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthweek(self):
        e = check_none(GROUP_ADV_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthday(self):
        e = check_none(GROUP_ADV_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthhour(self):
        e = check_none(GROUP_ADV_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idweekday(self):
        e = check_none(GROUP_ADV_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idweekhour(self):
        e = check_none(GROUP_ADV_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_iddayhour(self):
        e = check_none(GROUP_ADV_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonth(self):
        e = check_none(GROUP_OFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearweek(self):
        e = check_none(GROUP_OFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearday(self):
        e = check_none(GROUP_OFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearhour(self):
        e = check_none(GROUP_OFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthweek(self):
        e = check_none(GROUP_OFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthday(self):
        e = check_none(GROUP_OFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthhour(self):
        e = check_none(GROUP_OFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idweekday(self):
        e = check_none(GROUP_OFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idweekhour(self):
        e = check_none(GROUP_OFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_iddayhour(self):
        e = check_none(GROUP_OFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthweek(self):
        e = check_none(GROUP_YEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthday(self):
        e = check_none(GROUP_YEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthhour(self):
        e = check_none(GROUP_YEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearweekday(self):
        e = check_none(GROUP_YEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearweekhour(self):
        e = check_none(GROUP_YEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yeardayhour(self):
        e = check_none(GROUP_YEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthweekday(self):
        e = check_none(GROUP_MONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthweekhour(self):
        e = check_none(GROUP_MONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthdayhour(self):
        e = check_none(GROUP_MONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_weekdayhour(self):
        e = check_none(GROUP_WEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_id(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_ID)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyear(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyear(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyear(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonth(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idweek(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonth(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearweek(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearday(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthweek(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthday(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthhour(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_iddayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonth(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearweek(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthweek(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idweekday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idweekhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_iddayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearweekday(self):
        e = check_none(GROUP_AFF_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyear(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonth(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonth(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_iddayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonth(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearweek(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthweek(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idweekday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idweekhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_iddayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthweek(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthday(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearweekday(self):
        e = check_none(GROUP_AFF_MANAGERYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearweekhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryeardayhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthweekday(self):
        e = check_none(GROUP_AFF_MANAGERMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGERMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGERMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managerweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonth(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearweek(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthweek(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idweekday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idweekhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_iddayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthweek(self):
        e = check_none(GROUP_ADV_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthday(self):
        e = check_none(GROUP_ADV_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthhour(self):
        e = check_none(GROUP_ADV_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearweekday(self):
        e = check_none(GROUP_ADV_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearweekhour(self):
        e = check_none(GROUP_ADV_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyeardayhour(self):
        e = check_none(GROUP_ADV_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthweekday(self):
        e = check_none(GROUP_ADV_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthweekhour(self):
        e = check_none(GROUP_ADV_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthdayhour(self):
        e = check_none(GROUP_ADV_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idweekdayhour(self):
        e = check_none(GROUP_ADV_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthweek(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthday(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthhour(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearweekday(self):
        e = check_none(GROUP_OFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearweekhour(self):
        e = check_none(GROUP_OFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyeardayhour(self):
        e = check_none(GROUP_OFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthweekday(self):
        e = check_none(GROUP_OFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthweekhour(self):
        e = check_none(GROUP_OFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthdayhour(self):
        e = check_none(GROUP_OFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idweekdayhour(self):
        e = check_none(GROUP_OFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthweekday(self):
        e = check_none(GROUP_YEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthweekhour(self):
        e = check_none(GROUP_YEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthdayhour(self):
        e = check_none(GROUP_YEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearweekdayhour(self):
        e = check_none(GROUP_YEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_monthweekdayhour(self):
        e = check_none(GROUP_MONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyear(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_iddayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_iddayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryeardayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managerweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonth(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearweek(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthweek(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_iddayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearweekday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonth(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_iddayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyeardayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthweek(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearweekday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearweekhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyeardayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_managermonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthweek(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearweekday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearweekhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyeardayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthweekday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthweekhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthdayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idweekdayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthweekday(self):
        e = check_none(GROUP_ADV_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthweekhour(self):
        e = check_none(GROUP_ADV_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthdayhour(self):
        e = check_none(GROUP_ADV_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearweekdayhour(self):
        e = check_none(GROUP_ADV_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idmonthweekdayhour(self):
        e = check_none(GROUP_ADV_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthweekday(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthweekhour(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthdayhour(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearweekdayhour(self):
        e = check_none(GROUP_OFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idmonthweekdayhour(self):
        e = check_none(GROUP_OFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_yearmonthweekdayhour(self):
        e = check_none(GROUP_YEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonth(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_iddayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_managermonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthweek(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyeardayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageryearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthweekday(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthweekhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthdayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearweekdayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idmonthweekdayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idyearmonthweekdayhour(self):
        e = check_none(GROUP_ADV_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_offer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_OFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthweek(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyeardayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageryearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idoffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageroffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_adv_idoffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_ADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageroffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idadv_idoffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_manageradv_idoffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

    def group_aff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        e = check_none(GROUP_AFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR)
        self.assertIsNotNone(e, 'can not find data')

class FilterTest(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass
    def assertEqual(self, first, second, msg=None):

        if len(first) != len(second):
            return False

        if first == [] and second == []:
            return True

        for f in first:
            if f not in second:
                return False

        for s in second:
            if s not in first:
                return False
        return True

    def filter_gt(self):
        e, r = expect(FILTER_CASE_1), reality(FILTER_CASE_1)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_eq(self):
        e, r = expect(FILTER_CASE_2), reality(FILTER_CASE_2)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gte(self):
        e, r = expect(FILTER_CASE_3), reality(FILTER_CASE_3)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lt(self):
        e, r = expect(FILTER_CASE_4), reality(FILTER_CASE_4)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lte(self):
        e, r = expect(FILTER_CASE_5), reality(FILTER_CASE_5)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gt_gt(self):
        e, r = expect(FILTER_CASE_6), reality(FILTER_CASE_6)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gt_eq(self):
        e, r = expect(FILTER_CASE_7), reality(FILTER_CASE_7)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gte_eq(self):
        e, r = expect(FILTER_CASE_8), reality(FILTER_CASE_8)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_eq_eq(self):
        e, r = expect(FILTER_CASE_9), reality(FILTER_CASE_9)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lte_lte(self):
        e, r = expect(FILTER_CASE_10), reality(FILTER_CASE_10)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gt_lt(self):
        e, r = expect(FILTER_CASE_11), reality(FILTER_CASE_11)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gt_lte(self):
        e, r = expect(FILTER_CASE_12), reality(FILTER_CASE_12)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gte_gt(self):
        e, r = expect(FILTER_CASE_13), reality(FILTER_CASE_13)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lte_eq(self):
        e, r = expect(FILTER_CASE_14), reality(FILTER_CASE_14)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lte_gte(self):
        e, r = expect(FILTER_CASE_15), reality(FILTER_CASE_15)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lte_lt(self):
        e, r = expect(FILTER_CASE_16), reality(FILTER_CASE_16)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lte_lte(self):
        e, r = expect(FILTER_CASE_17), reality(FILTER_CASE_17)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_gte_gte(self):
        e, r = expect(FILTER_CASE_18), reality(FILTER_CASE_18)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_eq_eq(self):
        e, r = expect(FILTER_CASE_19), reality(FILTER_CASE_19)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_lt_lt(self):
        e, r = expect(FILTER_CASE_20), reality(FILTER_CASE_20)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def filter_eq_lt(self):
        e, r = expect(FILTER_CASE_21), reality(FILTER_CASE_21)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

class TopnTest(unittest.TestCase):

    def setUp(self):
        pass
    def tearDown(self):
        pass

    def topn_1_click_off_aff(self):
        e, r = expect(TOPN_CASE_1), reality(TOPN_CASE_1)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_2_conversion_off_aff_d_h(self):
        e, r = expect(TOPN_CASE_2), reality(TOPN_CASE_2)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_3_cost_off_aff_h(self):
        e, r = expect(TOPN_CASE_3), reality(TOPN_CASE_3)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_4_revenue_off_aff_am_d_h(self):
        e, r = expect(TOPN_CASE_4), reality(TOPN_CASE_4)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_5_profit_aff_d(self):
        e, r = expect(TOPN_CASE_5), reality(TOPN_CASE_5)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_6_conversion_am_aff_h_d(self):
        e, r = expect(TOPN_CASE_6), reality(TOPN_CASE_6)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_7_cost_aff_am_h(self):
        e, r = expect(TOPN_CASE_7), reality(TOPN_CASE_7)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_8_revenue_off_aff_am_h(self):
        e, r = expect(TOPN_CASE_8), reality(TOPN_CASE_8)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_9_profit_adv_am_h(self):
        e, r = expect(TOPN_CASE_9), reality(TOPN_CASE_9)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_10_profit_adv_aff_h(self):
        e, r = expect(TOPN_CASE_10), reality(TOPN_CASE_10)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_11_revenue_off_adv_h(self):
        e, r = expect(TOPN_CASE_11), reality(TOPN_CASE_11)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_12_cost_off_aff_d_h(self):
        e, r = expect(TOPN_CASE_12), reality(TOPN_CASE_12)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_13_click_off_adv(self):
        e, r = expect(TOPN_CASE_13), reality(TOPN_CASE_13)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_14_conversion_aff_h(self):
        e, r = expect(TOPN_CASE_14), reality(TOPN_CASE_14)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_15_revenue_am_aff_d(self):
        e, r = expect(TOPN_CASE_15), reality(TOPN_CASE_15)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_16_click_off_aff_h(self):
        e, r = expect(TOPN_CASE_16), reality(TOPN_CASE_16)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_17_conversion_off_aff_am_h(self):
        e, r = expect(TOPN_CASE_17), reality(TOPN_CASE_17)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_18_cost_off_aff_h(self):
        e, r = expect(TOPN_CASE_18), reality(TOPN_CASE_18)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_19_profit_am_aff(self):
        e, r = expect(TOPN_CASE_19), reality(TOPN_CASE_19)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

    def topn_20_revenue_off_adv(self):
        e, r = expect(TOPN_CASE_20), reality(TOPN_CASE_20)
        self.assertEqual(e, r, '\nexpect: {0}\n reality: {1}'.format(e, r))

class CurrencyTest(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def currency_aff_topcost(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["aff_manager","currency"]', '{"metricvalue":"cost","threshold":1}'), 'currency convert not correct')

    def currency_aff_topclick(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000,  '["aff_id","currency"]', '{"metricvalue":"click","threshold":2}'), 'currency convert not correct')

    def currency_off_topconv(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["offer_id","currency"]', '{"metricvalue":"coversion","threshold":3}'), 'currency convert not correct')

    def currency_adv_topprofit(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["adv_id", "currency"]', '{"metricvalue":"profit","threshold":4}'), 'currency convert not correct')

    def currency_aff_off_adv_am(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["aff_manager", "aff_id", "adv_id", "currency"]'), 'currency convert not correct')

    def currency_aff_off_adv(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000,  '["aff_manager", "offer_id", "adv_id", "currency"]'), 'currency convert not correct')

    def currency_aff_off(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["aff_id", "offer_id","currency"]'), 'currency convert not correct')

    def currency_adv_aff(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '[ "aff_id", "adv_id", "currency"]'), 'currency convert not correct')

    def currency_off_adv(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["offer_id", "adv_id", "currency"]'), 'currency convert not correct')

    def currency_am_aff_off(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["aff_manager", "aff_id", "offer_id",  "currency"]'), 'currency convert not correct')

    def currency_am_aff_adv(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["aff_manager", "aff_id", "adv_id", "currency"]'), 'currency convert not correct')

    def currency_am_off_adv(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000,  '["aff_manager", "offer_id", "adv_id", "currency"]'), 'currency convert not correct')

    def currency_aff_off_adv(self):
        self.assertIsNotNone(currency_convert(1400112000, 1405728000, '["aff_id", "offer_id", "adv_id", "currency"]'), 'currency convert not correct')

class SortTest(unittest.TestCase):
    def setUp(self):
        pass
    def tearDown(self):
        pass

    def click_desc_groupbyaff_id(self):
        setting = CLICK_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manager(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_id(self):
        setting = CLICK_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_id(self):
        setting = CLICK_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyear(self):
        setting = CLICK_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonth(self):
        setting = CLICK_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyweek(self):
        setting = CLICK_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyday(self):
        setting = CLICK_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyhour(self):
        setting = CLICK_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manager(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_id(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_id(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_id(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_id(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryear(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_id(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyear(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonth(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idday(self):
        setting = CLICK_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyear(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idweek(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonth(self):
        setting = CLICK_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearweek(self):
        setting = CLICK_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearday(self):
        setting = CLICK_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearhour(self):
        setting = CLICK_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthweek(self):
        setting = CLICK_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthday(self):
        setting = CLICK_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthhour(self):
        setting = CLICK_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyweekday(self):
        setting = CLICK_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyweekhour(self):
        setting = CLICK_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbydayhour(self):
        setting = CLICK_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_id(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_id(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyear(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearday(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthday(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_iddayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthday(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearweekday(self):
        setting = CLICK_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearweekhour(self):
        setting = CLICK_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyeardayhour(self):
        setting = CLICK_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthweekday(self):
        setting = CLICK_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthweekhour(self):
        setting = CLICK_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthdayhour(self):
        setting = CLICK_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyweekdayhour(self):
        setting = CLICK_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managerweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbymonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_managermonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manager(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_id(self):
        setting = CONVERSION_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_id(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyear(self):
        setting = CONVERSION_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonth(self):
        setting = CONVERSION_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyweek(self):
        setting = CONVERSION_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyday(self):
        setting = CONVERSION_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyhour(self):
        setting = CONVERSION_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manager(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_id(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyear(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearweek(self):
        setting = CONVERSION_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearday(self):
        setting = CONVERSION_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthweek(self):
        setting = CONVERSION_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthday(self):
        setting = CONVERSION_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthhour(self):
        setting = CONVERSION_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyweekday(self):
        setting = CONVERSION_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyweekhour(self):
        setting = CONVERSION_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbydayhour(self):
        setting = CONVERSION_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managerweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbymonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_managermonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_id(self):
        setting = COST_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manager(self):
        setting = COST_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_id(self):
        setting = COST_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_id(self):
        setting = COST_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyear(self):
        setting = COST_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonth(self):
        setting = COST_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyweek(self):
        setting = COST_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyday(self):
        setting = COST_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyhour(self):
        setting = COST_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manager(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_id(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_id(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_id(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_id(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryear(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_id(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyear(self):
        setting = COST_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonth(self):
        setting = COST_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idweek(self):
        setting = COST_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idday(self):
        setting = COST_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idhour(self):
        setting = COST_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyear(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonth(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idweek(self):
        setting = COST_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idday(self):
        setting = COST_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonth(self):
        setting = COST_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearweek(self):
        setting = COST_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearday(self):
        setting = COST_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearhour(self):
        setting = COST_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthweek(self):
        setting = COST_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthday(self):
        setting = COST_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthhour(self):
        setting = COST_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyweekday(self):
        setting = COST_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyweekhour(self):
        setting = COST_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbydayhour(self):
        setting = COST_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_id(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryear(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_id(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyear(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyear(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyear(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonth(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idweek(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonth(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearweek(self):
        setting = COST_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearday(self):
        setting = COST_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthweek(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthday(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthhour(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idweekday(self):
        setting = COST_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_iddayhour(self):
        setting = COST_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearweek(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearday(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthday(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idweekday(self):
        setting = COST_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idweekhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_iddayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthweek(self):
        setting = COST_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthday(self):
        setting = COST_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthhour(self):
        setting = COST_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearweekday(self):
        setting = COST_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearweekhour(self):
        setting = COST_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyeardayhour(self):
        setting = COST_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthweekday(self):
        setting = COST_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthweekhour(self):
        setting = COST_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthdayhour(self):
        setting = COST_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyweekdayhour(self):
        setting = COST_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managerweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearweek(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idweekday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_iddayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthday(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearweekday(self):
        setting = COST_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyeardayhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthweekday(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthweekday(self):
        setting = COST_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearweekdayhour(self):
        setting = COST_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbymonthweekdayhour(self):
        setting = COST_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_managermonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manager(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_id(self):
        setting = REVENUE_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_id(self):
        setting = REVENUE_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyear(self):
        setting = REVENUE_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonth(self):
        setting = REVENUE_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyweek(self):
        setting = REVENUE_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyday(self):
        setting = REVENUE_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyhour(self):
        setting = REVENUE_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manager(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryear(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_id(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyear(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonth(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonth(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearweek(self):
        setting = REVENUE_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearday(self):
        setting = REVENUE_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearhour(self):
        setting = REVENUE_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthweek(self):
        setting = REVENUE_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthday(self):
        setting = REVENUE_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthhour(self):
        setting = REVENUE_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyweekday(self):
        setting = REVENUE_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyweekhour(self):
        setting = REVENUE_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbydayhour(self):
        setting = REVENUE_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearweekday(self):
        setting = REVENUE_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthweekday(self):
        setting = REVENUE_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managerweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbymonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_managermonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manager(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_id(self):
        setting = PROFIT_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_id(self):
        setting = PROFIT_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyear(self):
        setting = PROFIT_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonth(self):
        setting = PROFIT_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyweek(self):
        setting = PROFIT_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyday(self):
        setting = PROFIT_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyhour(self):
        setting = PROFIT_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manager(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryear(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_id(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyear(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonth(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonth(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearweek(self):
        setting = PROFIT_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearday(self):
        setting = PROFIT_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearhour(self):
        setting = PROFIT_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthweek(self):
        setting = PROFIT_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthday(self):
        setting = PROFIT_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthhour(self):
        setting = PROFIT_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyweekday(self):
        setting = PROFIT_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyweekhour(self):
        setting = PROFIT_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbydayhour(self):
        setting = PROFIT_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearweekday(self):
        setting = PROFIT_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthweekday(self):
        setting = PROFIT_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managerweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbymonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_managermonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def profit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = PROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manager(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manager(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbydayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managerweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbymonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_managermonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descconversion_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCCONVERSION_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manager(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manager(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbydayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managerweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbymonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_managermonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_asccost_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_ASCCOST_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manager(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manager(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbydayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managerweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbymonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_managermonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manager(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manager(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbydayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managerweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbymonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_managermonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def click_descprofit_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CLICK_DESCPROFIT_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manager(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manager(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbydayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managerweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbymonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_managermonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_asccost_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_ASCCOST_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manager(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manager(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbydayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managerweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbymonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_managermonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descrevenue_desc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCREVENUE_DESC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manager(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manager(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbydayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managerweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbymonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_managermonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def conversion_descprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = CONVERSION_DESCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manager(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manager(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbydayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managerweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbymonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_managermonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascrevenue_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCREVENUE_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manager(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manager(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbydayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managerweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbymonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_managermonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def cost_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = COST_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manager(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manager(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGER
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbydayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_id(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_ID
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managerweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbymonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyear(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEAR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managerweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_managermonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonth(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTH
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_iddayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_managermonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageryearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweek(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEK
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyeardayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageryearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageroffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyadv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekday(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAY
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageroffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGEROFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idadv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

    def revenue_ascprofit_asc_groupbyaff_idaff_manageradv_idoffer_idyearmonthweekdayhour(self):
        setting = REVENUE_ASCPROFIT_ASC_GROUPBYAFF_IDAFF_MANAGERADV_IDOFFER_IDYEARMONTHWEEKDAYHOUR
        e, r = expect(setting), reality(setting)
        self.assertEqual(e, r, '\nsetting:{0}\nexpect: {1}\n reality: {2}'.format(setting,e, r))

if __name__ == '__main__':

    testsuite = unittest.TestSuite()


    # for case in currencylst:
    #     testsuite.addTest(CurrencyTest(case))

    for case in filterlst:
        testsuite.addTest(FilterTest(case))

    for case in sortlst:
        testsuite.addTest(SortTest(case))

    for case in topnlst:
        testsuite.addTest(TopnTest(case))

    for case in grouplst:
        testsuite.addTest(GroupTest(case))


    filename = '/home/jeff/dianyi/Mercurial/mercurial/output/result.html'
    fp = file(filename, 'wb')

    runner = HTMLTestRunner.HTMLTestRunner(
                stream=fp,
                title='Test Result',
                description='Test Report'
                )
    runner.run(testsuite)
    unittest.main()
